# Generated by Django 2.1.5 on 2020-01-14 00:13

import authentication.managers
import authentication.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('marital_status', models.CharField(blank=True, choices=[('M', 'Married'), ('S', 'Single')], max_length=1, null=True, verbose_name='Marital Status')),
                ('profile_photo', models.ImageField(blank=True, default='/home/flash/Documents/Projects/beaprose2/beaprose/media/default/persion.svg', null=True, upload_to=authentication.models.upload_profile_photo, verbose_name='Profile Photo')),
                ('phoneNumber', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('phoneNumberVerified', models.BooleanField(default=False, verbose_name='Phone Number Verified')),
                ('is_expert', models.BooleanField(default=False, verbose_name='Expert Status')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer Status')),
                ('is_influencer', models.BooleanField(default=False, verbose_name='Influencer Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authentication.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BillingCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=50)),
                ('card_name', models.CharField(max_length=100)),
                ('cvc', models.CharField(max_length=10)),
                ('expiry', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hasAcceptedAgreement', models.BooleanField(default=False, verbose_name='Has Accepted User Agreement?')),
                ('payment_cards', models.ManyToManyField(to='authentication.BillingCard')),
            ],
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(blank=True, max_length=100, verbose_name='Headline')),
                ('short_bio', models.TextField(blank=True, verbose_name='Biography')),
                ('timezone', models.CharField(blank=True, max_length=100, verbose_name='Timezone')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('skype_number', models.CharField(blank=True, max_length=100, verbose_name='Skype')),
                ('rate_per_hour', models.PositiveIntegerField()),
                ('is_long_term', models.BooleanField(default=False)),
                ('is_pro_bono', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Influencer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WorkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=30, verbose_name='Job Title')),
                ('country_work', models.CharField(max_length=30, verbose_name='Work Country')),
                ('city_work', models.CharField(max_length=30, verbose_name='Work City')),
                ('role', models.CharField(max_length=30, verbose_name='Role')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
            ],
        ),
        migrations.AddField(
            model_name='expertprofile',
            name='keywords',
            field=models.ManyToManyField(blank=True, related_name='experts', to='authentication.Keyword'),
        ),
        migrations.AddField(
            model_name='expertprofile',
            name='sectors',
            field=models.ManyToManyField(blank=True, related_name='experts', to='authentication.Sector'),
        ),
        migrations.AddField(
            model_name='expertprofile',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='experts', to='authentication.Skill'),
        ),
        migrations.AddField(
            model_name='expertprofile',
            name='work_history',
            field=models.ManyToManyField(blank=True, related_name='experts', to='authentication.WorkHistory'),
        ),
        migrations.AddField(
            model_name='expert',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.ExpertProfile'),
        ),
        migrations.AddField(
            model_name='expert',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
